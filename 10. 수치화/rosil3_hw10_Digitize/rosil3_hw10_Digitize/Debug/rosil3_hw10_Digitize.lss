
rosil3_hw10_Digitize.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000c22  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000bae  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000016  00800100  00800100  00000c22  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000c22  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000c54  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00000c90  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c52  00000000  00000000  00000d18  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000918  00000000  00000000  0000196a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004b4  00000000  00000000  00002282  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000178  00000000  00000000  00002738  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000494  00000000  00000000  000028b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000031f  00000000  00000000  00002d44  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  00003063  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	86 c0       	rjmp	.+268    	; 0x10e <__ctors_end>
   2:	00 00       	nop
   4:	94 c0       	rjmp	.+296    	; 0x12e <__bad_interrupt>
   6:	00 00       	nop
   8:	92 c0       	rjmp	.+292    	; 0x12e <__bad_interrupt>
   a:	00 00       	nop
   c:	90 c0       	rjmp	.+288    	; 0x12e <__bad_interrupt>
   e:	00 00       	nop
  10:	8e c0       	rjmp	.+284    	; 0x12e <__bad_interrupt>
  12:	00 00       	nop
  14:	8c c0       	rjmp	.+280    	; 0x12e <__bad_interrupt>
  16:	00 00       	nop
  18:	8a c0       	rjmp	.+276    	; 0x12e <__bad_interrupt>
  1a:	00 00       	nop
  1c:	88 c0       	rjmp	.+272    	; 0x12e <__bad_interrupt>
  1e:	00 00       	nop
  20:	86 c0       	rjmp	.+268    	; 0x12e <__bad_interrupt>
  22:	00 00       	nop
  24:	84 c0       	rjmp	.+264    	; 0x12e <__bad_interrupt>
  26:	00 00       	nop
  28:	de c1       	rjmp	.+956    	; 0x3e6 <__vector_10>
  2a:	00 00       	nop
  2c:	80 c0       	rjmp	.+256    	; 0x12e <__bad_interrupt>
  2e:	00 00       	nop
  30:	7e c0       	rjmp	.+252    	; 0x12e <__bad_interrupt>
  32:	00 00       	nop
  34:	7c c0       	rjmp	.+248    	; 0x12e <__bad_interrupt>
  36:	00 00       	nop
  38:	7a c0       	rjmp	.+244    	; 0x12e <__bad_interrupt>
  3a:	00 00       	nop
  3c:	78 c0       	rjmp	.+240    	; 0x12e <__bad_interrupt>
  3e:	00 00       	nop
  40:	76 c0       	rjmp	.+236    	; 0x12e <__bad_interrupt>
  42:	00 00       	nop
  44:	74 c0       	rjmp	.+232    	; 0x12e <__bad_interrupt>
  46:	00 00       	nop
  48:	72 c0       	rjmp	.+228    	; 0x12e <__bad_interrupt>
  4a:	00 00       	nop
  4c:	70 c0       	rjmp	.+224    	; 0x12e <__bad_interrupt>
  4e:	00 00       	nop
  50:	6e c0       	rjmp	.+220    	; 0x12e <__bad_interrupt>
  52:	00 00       	nop
  54:	6c c0       	rjmp	.+216    	; 0x12e <__bad_interrupt>
  56:	00 00       	nop
  58:	6a c0       	rjmp	.+212    	; 0x12e <__bad_interrupt>
  5a:	00 00       	nop
  5c:	68 c0       	rjmp	.+208    	; 0x12e <__bad_interrupt>
  5e:	00 00       	nop
  60:	66 c0       	rjmp	.+204    	; 0x12e <__bad_interrupt>
  62:	00 00       	nop
  64:	64 c0       	rjmp	.+200    	; 0x12e <__bad_interrupt>
  66:	00 00       	nop
  68:	62 c0       	rjmp	.+196    	; 0x12e <__bad_interrupt>
  6a:	00 00       	nop
  6c:	60 c0       	rjmp	.+192    	; 0x12e <__bad_interrupt>
  6e:	00 00       	nop
  70:	5e c0       	rjmp	.+188    	; 0x12e <__bad_interrupt>
  72:	00 00       	nop
  74:	5c c0       	rjmp	.+184    	; 0x12e <__bad_interrupt>
  76:	00 00       	nop
  78:	5a c0       	rjmp	.+180    	; 0x12e <__bad_interrupt>
  7a:	00 00       	nop
  7c:	58 c0       	rjmp	.+176    	; 0x12e <__bad_interrupt>
  7e:	00 00       	nop
  80:	56 c0       	rjmp	.+172    	; 0x12e <__bad_interrupt>
  82:	00 00       	nop
  84:	54 c0       	rjmp	.+168    	; 0x12e <__bad_interrupt>
  86:	00 00       	nop
  88:	52 c0       	rjmp	.+164    	; 0x12e <__bad_interrupt>
  8a:	00 00       	nop
  8c:	08 00       	.word	0x0008	; ????
  8e:	00 00       	nop
  90:	be 92       	st	-X, r11
  92:	24 49       	sbci	r18, 0x94	; 148
  94:	12 3e       	cpi	r17, 0xE2	; 226
  96:	ab aa       	std	Y+51, r10	; 0x33
  98:	aa 2a       	or	r10, r26
  9a:	be cd       	rjmp	.-1156   	; 0xfffffc18 <__eeprom_end+0xff7efc18>
  9c:	cc cc       	rjmp	.-1640   	; 0xfffffa36 <__eeprom_end+0xff7efa36>
  9e:	4c 3e       	cpi	r20, 0xEC	; 236
  a0:	00 00       	nop
  a2:	00 80       	ld	r0, Z
  a4:	be ab       	std	Y+54, r27	; 0x36
  a6:	aa aa       	std	Y+50, r10	; 0x32
  a8:	aa 3e       	cpi	r26, 0xEA	; 234
  aa:	00 00       	nop
  ac:	00 00       	nop
  ae:	bf 00       	.word	0x00bf	; ????
  b0:	00 00       	nop
  b2:	80 3f       	cpi	r24, 0xF0	; 240
  b4:	00 00       	nop
  b6:	00 00       	nop
  b8:	00 08       	sbc	r0, r0
  ba:	41 78       	andi	r20, 0x81	; 129
  bc:	d3 bb       	out	0x13, r29	; 19
  be:	43 87       	std	Z+11, r20	; 0x0b
  c0:	d1 13       	cpse	r29, r17
  c2:	3d 19       	sub	r19, r13
  c4:	0e 3c       	cpi	r16, 0xCE	; 206
  c6:	c3 bd       	out	0x23, r28	; 35
  c8:	42 82       	std	Z+2, r4	; 0x02
  ca:	ad 2b       	or	r26, r29
  cc:	3e 68       	ori	r19, 0x8E	; 142
  ce:	ec 82       	std	Y+4, r14	; 0x04
  d0:	76 be       	out	0x36, r7	; 54
  d2:	d9 8f       	std	Y+25, r29	; 0x19
  d4:	e1 a9       	ldd	r30, Z+49	; 0x31
  d6:	3e 4c       	sbci	r19, 0xCE	; 206
  d8:	80 ef       	ldi	r24, 0xF0	; 240
  da:	ff be       	out	0x3f, r15	; 63
  dc:	01 c4       	rjmp	.+2050   	; 0x8e0 <__mulsf3_pse+0x6e>
  de:	ff 7f       	andi	r31, 0xFF	; 255
  e0:	3f 00       	.word	0x003f	; ????
  e2:	00 00       	nop
  e4:	00 00       	nop
  e6:	07 63       	ori	r16, 0x37	; 55
  e8:	42 36       	cpi	r20, 0x62	; 98
  ea:	b7 9b       	sbis	0x16, 7	; 22
  ec:	d8 a7       	std	Y+40, r29	; 0x28
  ee:	1a 39       	cpi	r17, 0x9A	; 154
  f0:	68 56       	subi	r22, 0x68	; 104
  f2:	18 ae       	std	Y+56, r1	; 0x38
  f4:	ba ab       	std	Y+50, r27	; 0x32
  f6:	55 8c       	ldd	r5, Z+29	; 0x1d
  f8:	1d 3c       	cpi	r17, 0xCD	; 205
  fa:	b7 cc       	rjmp	.-1682   	; 0xfffffa6a <__eeprom_end+0xff7efa6a>
  fc:	57 63       	ori	r21, 0x37	; 55
  fe:	bd 6d       	ori	r27, 0xDD	; 221
 100:	ed fd       	.word	0xfded	; ????
 102:	75 3e       	cpi	r23, 0xE5	; 229
 104:	f6 17       	cp	r31, r22
 106:	72 31       	cpi	r23, 0x12	; 18
 108:	bf 00       	.word	0x00bf	; ????
 10a:	00 00       	nop
 10c:	80 3f       	cpi	r24, 0xF0	; 240

0000010e <__ctors_end>:
 10e:	11 24       	eor	r1, r1
 110:	1f be       	out	0x3f, r1	; 63
 112:	cf ef       	ldi	r28, 0xFF	; 255
 114:	d0 e1       	ldi	r29, 0x10	; 16
 116:	de bf       	out	0x3e, r29	; 62
 118:	cd bf       	out	0x3d, r28	; 61

0000011a <__do_clear_bss>:
 11a:	21 e0       	ldi	r18, 0x01	; 1
 11c:	a0 e0       	ldi	r26, 0x00	; 0
 11e:	b1 e0       	ldi	r27, 0x01	; 1
 120:	01 c0       	rjmp	.+2      	; 0x124 <.do_clear_bss_start>

00000122 <.do_clear_bss_loop>:
 122:	1d 92       	st	X+, r1

00000124 <.do_clear_bss_start>:
 124:	a6 31       	cpi	r26, 0x16	; 22
 126:	b2 07       	cpc	r27, r18
 128:	e1 f7       	brne	.-8      	; 0x122 <.do_clear_bss_loop>
 12a:	17 d1       	rcall	.+558    	; 0x35a <main>
 12c:	3e c5       	rjmp	.+2684   	; 0xbaa <_exit>

0000012e <__bad_interrupt>:
 12e:	68 cf       	rjmp	.-304    	; 0x0 <__vectors>

00000130 <set_GPIO>:
void USART1_TransNum(int num); // int형 data를 uart1으로 전송해 출력

void set_GPIO(void)
{
	// ADC 0~3 INPUT
	cbi(DDRF, 0);
 130:	e1 e6       	ldi	r30, 0x61	; 97
 132:	f0 e0       	ldi	r31, 0x00	; 0
 134:	80 81       	ld	r24, Z
 136:	8e 7f       	andi	r24, 0xFE	; 254
 138:	80 83       	st	Z, r24
	cbi(DDRF, 1);
 13a:	80 81       	ld	r24, Z
 13c:	8d 7f       	andi	r24, 0xFD	; 253
 13e:	80 83       	st	Z, r24
	cbi(DDRF, 2);
 140:	80 81       	ld	r24, Z
 142:	8b 7f       	andi	r24, 0xFB	; 251
 144:	80 83       	st	Z, r24
	cbi(DDRF, 3);
 146:	80 81       	ld	r24, Z
 148:	87 7f       	andi	r24, 0xF7	; 247
 14a:	80 83       	st	Z, r24
	
	cbi(DDRD, 2); // USART1 RXD1 INPUT
 14c:	81 b3       	in	r24, 0x11	; 17
 14e:	8b 7f       	andi	r24, 0xFB	; 251
 150:	81 bb       	out	0x11, r24	; 17
	sbi(DDRD, 3); // USART1 TXD1 OUTPUT
 152:	81 b3       	in	r24, 0x11	; 17
 154:	88 60       	ori	r24, 0x08	; 8
 156:	81 bb       	out	0x11, r24	; 17
	
	cbi(DDRB, 7); // OC2 OUTPUT
 158:	87 b3       	in	r24, 0x17	; 23
 15a:	8f 77       	andi	r24, 0x7F	; 127
 15c:	87 bb       	out	0x17, r24	; 23
 15e:	08 95       	ret

00000160 <set_USART1>:
}

void set_USART1(void) // USART1 Register 설정
{
	UCSR1A = 0x00;
 160:	10 92 9b 00 	sts	0x009B, r1	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
	UCSR1B = 0x18;    // RX, TX 활성화
 164:	88 e1       	ldi	r24, 0x18	; 24
 166:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
	UCSR1C = 0x06;  // Character Size 8bit로 설정
 16a:	86 e0       	ldi	r24, 0x06	; 6
 16c:	80 93 9d 00 	sts	0x009D, r24	; 0x80009d <__TEXT_REGION_LENGTH__+0x7e009d>
	UBRR1L = 8;      // 115200bps
 170:	88 e0       	ldi	r24, 0x08	; 8
 172:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 176:	08 95       	ret

00000178 <set_TIMER2>:
}

void set_TIMER2(void) // Timer2 Setting
{
	TCCR2   = (1<<WGM20)|(1<<WGM21)|(1<<COM21)|(0<<COM20)|(1<<CS22)|(0<<CS21)|(1<<CS20);
 178:	8d e6       	ldi	r24, 0x6D	; 109
 17a:	85 bd       	out	0x25, r24	; 37
	// Fast PWM mode / Clear OC2 on compare match, set OC2 at BOTTOM / 분주비 1024
	TIMSK   = (1<<TOIE2);   // Timer/Counter2 Overflow Interrupt 활성화
 17c:	80 e4       	ldi	r24, 0x40	; 64
 17e:	87 bf       	out	0x37, r24	; 55
	TCNT2   = 255-156;  // = 99 // 정확하게 나누어 떨어지진 않음 (원래는 98.5번이 정확함)
 180:	83 e6       	ldi	r24, 0x63	; 99
 182:	84 bd       	out	0x24, r24	; 36
 184:	08 95       	ret

00000186 <set_ADC>:
}

void set_ADC(void)
{
	ADMUX   = (0<<REFS1)|(1<<REFS0)|(0<<ADLAR);
 186:	80 e4       	ldi	r24, 0x40	; 64
 188:	87 b9       	out	0x07, r24	; 7
	// AVCC with external capacitor at AREF pin, ADC Left Adjust Result
	ADCSRA   = (1<<ADEN)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);
 18a:	87 e8       	ldi	r24, 0x87	; 135
 18c:	86 b9       	out	0x06, r24	; 6
 18e:	08 95       	ret

00000190 <Register_adc>:
}

////////////// ADC digitize ///////////////
double mVol;
int Register_adc(int adc){
	mVol = (double)adc*(AVCC/1024.0)*1000.0; // [mV]
 190:	bc 01       	movw	r22, r24
 192:	99 0f       	add	r25, r25
 194:	88 0b       	sbc	r24, r24
 196:	99 0b       	sbc	r25, r25
 198:	87 d2       	rcall	.+1294   	; 0x6a8 <__floatsisf>
 19a:	20 e0       	ldi	r18, 0x00	; 0
 19c:	30 e0       	ldi	r19, 0x00	; 0
 19e:	40 ea       	ldi	r20, 0xA0	; 160
 1a0:	5b e3       	ldi	r21, 0x3B	; 59
 1a2:	59 d3       	rcall	.+1714   	; 0x856 <__mulsf3>
 1a4:	20 e0       	ldi	r18, 0x00	; 0
 1a6:	30 e0       	ldi	r19, 0x00	; 0
 1a8:	4a e7       	ldi	r20, 0x7A	; 122
 1aa:	54 e4       	ldi	r21, 0x44	; 68
 1ac:	54 d3       	rcall	.+1704   	; 0x856 <__mulsf3>
 1ae:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <mVol>
 1b2:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <mVol+0x1>
 1b6:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <mVol+0x2>
 1ba:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <mVol+0x3>
	return (int)mVol;
 1be:	41 d2       	rcall	.+1154   	; 0x642 <__fixsfsi>
 1c0:	cb 01       	movw	r24, r22
}
 1c2:	08 95       	ret

000001c4 <ln>:
 1c4:	fd c2       	rjmp	.+1530   	; 0x7c0 <log10>

double Rcds; // [mV]
double temp;
#define R9 4700 // [옴]
double ln(double x) { return log10(x); }
 1c6:	08 95       	ret

000001c8 <CDS>:
int CDS(int adc){
 1c8:	cf 92       	push	r12
 1ca:	df 92       	push	r13
 1cc:	ef 92       	push	r14
 1ce:	ff 92       	push	r15
	int Lux;
	mVol = (double)adc*(AVCC/1024.0)*1000.0; // [mV]
 1d0:	bc 01       	movw	r22, r24
 1d2:	99 0f       	add	r25, r25
 1d4:	88 0b       	sbc	r24, r24
 1d6:	99 0b       	sbc	r25, r25
 1d8:	67 d2       	rcall	.+1230   	; 0x6a8 <__floatsisf>
 1da:	20 e0       	ldi	r18, 0x00	; 0
 1dc:	30 e0       	ldi	r19, 0x00	; 0
 1de:	40 ea       	ldi	r20, 0xA0	; 160
 1e0:	5b e3       	ldi	r21, 0x3B	; 59
 1e2:	39 d3       	rcall	.+1650   	; 0x856 <__mulsf3>
 1e4:	20 e0       	ldi	r18, 0x00	; 0
 1e6:	30 e0       	ldi	r19, 0x00	; 0
 1e8:	4a e7       	ldi	r20, 0x7A	; 122
 1ea:	54 e4       	ldi	r21, 0x44	; 68
 1ec:	34 d3       	rcall	.+1640   	; 0x856 <__mulsf3>
 1ee:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <mVol>
 1f2:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <mVol+0x1>
 1f6:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <mVol+0x2>
 1fa:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <mVol+0x3>
	Rcds = (R9 * AVCC)/(mVol/1000.0)-R9;
 1fe:	20 e0       	ldi	r18, 0x00	; 0
 200:	30 e0       	ldi	r19, 0x00	; 0
 202:	4a e7       	ldi	r20, 0x7A	; 122
 204:	54 e4       	ldi	r21, 0x44	; 68
 206:	b5 d1       	rcall	.+874    	; 0x572 <__divsf3>
 208:	9b 01       	movw	r18, r22
 20a:	ac 01       	movw	r20, r24
 20c:	60 e0       	ldi	r22, 0x00	; 0
 20e:	78 e9       	ldi	r23, 0x98	; 152
 210:	87 eb       	ldi	r24, 0xB7	; 183
 212:	96 e4       	ldi	r25, 0x46	; 70
 214:	ae d1       	rcall	.+860    	; 0x572 <__divsf3>
 216:	20 e0       	ldi	r18, 0x00	; 0
 218:	30 ee       	ldi	r19, 0xE0	; 224
 21a:	42 e9       	ldi	r20, 0x92	; 146
 21c:	55 e4       	ldi	r21, 0x45	; 69
 21e:	44 d1       	rcall	.+648    	; 0x4a8 <__subsf3>
 220:	60 93 0e 01 	sts	0x010E, r22	; 0x80010e <Rcds>
 224:	70 93 0f 01 	sts	0x010F, r23	; 0x80010f <Rcds+0x1>
 228:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <Rcds+0x2>
 22c:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <Rcds+0x3>
	temp = 1 - (ln(Rcds) - ln(40000))/0.8;
 230:	c9 df       	rcall	.-110    	; 0x1c4 <ln>
 232:	6b 01       	movw	r12, r22
 234:	7c 01       	movw	r14, r24
 236:	60 e0       	ldi	r22, 0x00	; 0
 238:	70 e4       	ldi	r23, 0x40	; 64
 23a:	8c e1       	ldi	r24, 0x1C	; 28
 23c:	97 e4       	ldi	r25, 0x47	; 71
 23e:	c2 df       	rcall	.-124    	; 0x1c4 <ln>
 240:	9b 01       	movw	r18, r22
 242:	ac 01       	movw	r20, r24
 244:	c7 01       	movw	r24, r14
 246:	b6 01       	movw	r22, r12
 248:	2f d1       	rcall	.+606    	; 0x4a8 <__subsf3>
 24a:	2d ec       	ldi	r18, 0xCD	; 205
 24c:	3c ec       	ldi	r19, 0xCC	; 204
 24e:	4c e4       	ldi	r20, 0x4C	; 76
 250:	5f e3       	ldi	r21, 0x3F	; 63
 252:	8f d1       	rcall	.+798    	; 0x572 <__divsf3>
 254:	9b 01       	movw	r18, r22
 256:	ac 01       	movw	r20, r24
 258:	60 e0       	ldi	r22, 0x00	; 0
 25a:	70 e0       	ldi	r23, 0x00	; 0
 25c:	80 e8       	ldi	r24, 0x80	; 128
 25e:	9f e3       	ldi	r25, 0x3F	; 63
 260:	23 d1       	rcall	.+582    	; 0x4a8 <__subsf3>
 262:	9b 01       	movw	r18, r22
 264:	ac 01       	movw	r20, r24
 266:	60 93 02 01 	sts	0x0102, r22	; 0x800102 <temp>
 26a:	70 93 03 01 	sts	0x0103, r23	; 0x800103 <temp+0x1>
 26e:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <temp+0x2>
	Lux = pow(10, temp);
 272:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <temp+0x3>
 276:	60 e0       	ldi	r22, 0x00	; 0
 278:	70 e0       	ldi	r23, 0x00	; 0
 27a:	80 e2       	ldi	r24, 0x20	; 32
 27c:	91 e4       	ldi	r25, 0x41	; 65
 27e:	4e d3       	rcall	.+1692   	; 0x91c <pow>
 280:	e0 d1       	rcall	.+960    	; 0x642 <__fixsfsi>
	return Lux;
}
 282:	cb 01       	movw	r24, r22
 284:	ff 90       	pop	r15
 286:	ef 90       	pop	r14
 288:	df 90       	pop	r13
 28a:	cf 90       	pop	r12
 28c:	08 95       	ret

0000028e <LM35>:


#define R12 30000
#define R13 10000
int LM35(int adc){
	mVol = (double)adc*(AVCC/1024.0)*1000.0; // [mV]
 28e:	bc 01       	movw	r22, r24
 290:	99 0f       	add	r25, r25
 292:	88 0b       	sbc	r24, r24
 294:	99 0b       	sbc	r25, r25
 296:	08 d2       	rcall	.+1040   	; 0x6a8 <__floatsisf>
 298:	20 e0       	ldi	r18, 0x00	; 0
 29a:	30 e0       	ldi	r19, 0x00	; 0
 29c:	40 ea       	ldi	r20, 0xA0	; 160
 29e:	5b e3       	ldi	r21, 0x3B	; 59
 2a0:	da d2       	rcall	.+1460   	; 0x856 <__mulsf3>
 2a2:	20 e0       	ldi	r18, 0x00	; 0
 2a4:	30 e0       	ldi	r19, 0x00	; 0
 2a6:	4a e7       	ldi	r20, 0x7A	; 122
 2a8:	54 e4       	ldi	r21, 0x44	; 68
 2aa:	d5 d2       	rcall	.+1450   	; 0x856 <__mulsf3>
 2ac:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <mVol>
 2b0:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <mVol+0x1>
 2b4:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <mVol+0x2>
 2b8:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <mVol+0x3>
	int T_LM35 = mVol / 10.0;
 2bc:	20 e0       	ldi	r18, 0x00	; 0
 2be:	30 e0       	ldi	r19, 0x00	; 0
 2c0:	40 e2       	ldi	r20, 0x20	; 32
 2c2:	51 e4       	ldi	r21, 0x41	; 65
 2c4:	56 d1       	rcall	.+684    	; 0x572 <__divsf3>
 2c6:	bd d1       	rcall	.+890    	; 0x642 <__fixsfsi>
	return T_LM35;
}
 2c8:	cb 01       	movw	r24, r22
 2ca:	08 95       	ret

000002cc <Thermister>:

#define R10 4700
#define R0  1000
int Thermister(int adc){
	mVol = (double)adc*(AVCC/1024.0)*1000.0; // [mV]
 2cc:	bc 01       	movw	r22, r24
 2ce:	99 0f       	add	r25, r25
 2d0:	88 0b       	sbc	r24, r24
 2d2:	99 0b       	sbc	r25, r25
 2d4:	e9 d1       	rcall	.+978    	; 0x6a8 <__floatsisf>
 2d6:	20 e0       	ldi	r18, 0x00	; 0
 2d8:	30 e0       	ldi	r19, 0x00	; 0
 2da:	40 ea       	ldi	r20, 0xA0	; 160
 2dc:	5b e3       	ldi	r21, 0x3B	; 59
 2de:	bb d2       	rcall	.+1398   	; 0x856 <__mulsf3>
 2e0:	20 e0       	ldi	r18, 0x00	; 0
 2e2:	30 e0       	ldi	r19, 0x00	; 0
 2e4:	4a e7       	ldi	r20, 0x7A	; 122
 2e6:	54 e4       	ldi	r21, 0x44	; 68
 2e8:	b6 d2       	rcall	.+1388   	; 0x856 <__mulsf3>
 2ea:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <mVol>
 2ee:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <mVol+0x1>
 2f2:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <mVol+0x2>
 2f6:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <mVol+0x3>
	double r_th = ((R10*AVCC)/(mVol/1000.0)) - R10;
 2fa:	20 e0       	ldi	r18, 0x00	; 0
 2fc:	30 e0       	ldi	r19, 0x00	; 0
 2fe:	4a e7       	ldi	r20, 0x7A	; 122
 300:	54 e4       	ldi	r21, 0x44	; 68
 302:	37 d1       	rcall	.+622    	; 0x572 <__divsf3>
 304:	9b 01       	movw	r18, r22
 306:	ac 01       	movw	r20, r24
 308:	60 e0       	ldi	r22, 0x00	; 0
 30a:	78 e9       	ldi	r23, 0x98	; 152
 30c:	87 eb       	ldi	r24, 0xB7	; 183
 30e:	96 e4       	ldi	r25, 0x46	; 70
 310:	30 d1       	rcall	.+608    	; 0x572 <__divsf3>
 312:	20 e0       	ldi	r18, 0x00	; 0
 314:	30 ee       	ldi	r19, 0xE0	; 224
 316:	42 e9       	ldi	r20, 0x92	; 146
 318:	55 e4       	ldi	r21, 0x45	; 69
 31a:	c6 d0       	rcall	.+396    	; 0x4a8 <__subsf3>
	int t_th = 1/((1/298.15)+(1/3650.0)*(ln(r_th/R0)))-273.15;
 31c:	20 e0       	ldi	r18, 0x00	; 0
 31e:	30 e0       	ldi	r19, 0x00	; 0
 320:	4a e7       	ldi	r20, 0x7A	; 122
 322:	54 e4       	ldi	r21, 0x44	; 68
 324:	26 d1       	rcall	.+588    	; 0x572 <__divsf3>
 326:	4e df       	rcall	.-356    	; 0x1c4 <ln>
 328:	2b ef       	ldi	r18, 0xFB	; 251
 32a:	33 ea       	ldi	r19, 0xA3	; 163
 32c:	4f e8       	ldi	r20, 0x8F	; 143
 32e:	59 e3       	ldi	r21, 0x39	; 57
 330:	92 d2       	rcall	.+1316   	; 0x856 <__mulsf3>
 332:	2f e0       	ldi	r18, 0x0F	; 15
 334:	3f ec       	ldi	r19, 0xCF	; 207
 336:	4b e5       	ldi	r20, 0x5B	; 91
 338:	5b e3       	ldi	r21, 0x3B	; 59
 33a:	b7 d0       	rcall	.+366    	; 0x4aa <__addsf3>
 33c:	9b 01       	movw	r18, r22
 33e:	ac 01       	movw	r20, r24
 340:	60 e0       	ldi	r22, 0x00	; 0
 342:	70 e0       	ldi	r23, 0x00	; 0
 344:	80 e8       	ldi	r24, 0x80	; 128
 346:	9f e3       	ldi	r25, 0x3F	; 63
 348:	14 d1       	rcall	.+552    	; 0x572 <__divsf3>
 34a:	23 e3       	ldi	r18, 0x33	; 51
 34c:	33 e9       	ldi	r19, 0x93	; 147
 34e:	48 e8       	ldi	r20, 0x88	; 136
 350:	53 e4       	ldi	r21, 0x43	; 67
 352:	aa d0       	rcall	.+340    	; 0x4a8 <__subsf3>
 354:	76 d1       	rcall	.+748    	; 0x642 <__fixsfsi>
 356:	cb 01       	movw	r24, r22
 358:	08 95       	ret

0000035a <main>:
	return t_th;
}
 35a:	ea de       	rcall	.-556    	; 0x130 <set_GPIO>
 35c:	01 df       	rcall	.-510    	; 0x160 <set_USART1>

int main(void)
{
	set_GPIO();
	set_USART1();
	set_TIMER2();
 35e:	0c df       	rcall	.-488    	; 0x178 <set_TIMER2>
 360:	12 df       	rcall	.-476    	; 0x186 <set_ADC>
	set_ADC();
 362:	78 94       	sei
 364:	ff cf       	rjmp	.-2      	; 0x364 <main+0xa>

00000366 <get_adc>:
	sei();   // 전역 인터럽트 활성화
 366:	97 b1       	in	r25, 0x07	; 7
 368:	90 7e       	andi	r25, 0xE0	; 224
	while (1);
}

unsigned int get_adc(int id) // MUX값을 update하기 위한 함수
{
	ADMUX = (ADMUX & 0b11100000) | id;
 36a:	89 2b       	or	r24, r25
 36c:	87 b9       	out	0x07, r24	; 7
	// 상위 3bit의 register 설정은 유지해주면서
	// MUX 값을 id와 'or 연산'함으로써 update
	
	cbi(ADCSRA, ADIF); // ADIF를 0으로 만듦, ADC Interrupt Flag를 Disable
 36e:	86 b1       	in	r24, 0x06	; 6
 370:	8f 7e       	andi	r24, 0xEF	; 239
 372:	86 b9       	out	0x06, r24	; 6
	sbi(ADCSRA, ADSC); // ADC Conversion 시작
 374:	86 b1       	in	r24, 0x06	; 6
 376:	80 64       	ori	r24, 0x40	; 64
 378:	86 b9       	out	0x06, r24	; 6
	
	while(!((ADCSRA)&(1<<ADIF))); // 대략 25pulse 가 걸림
 37a:	34 9b       	sbis	0x06, 4	; 6
 37c:	fe cf       	rjmp	.-4      	; 0x37a <get_adc+0x14>
	return ADC; // ADC는 10bit
 37e:	84 b1       	in	r24, 0x04	; 4
 380:	95 b1       	in	r25, 0x05	; 5
}
 382:	08 95       	ret

00000384 <USART1_Transmit>:

void USART1_Transmit( unsigned char data ) // USART1 송신
{
	// UDR 값이 비었는지 확인(비어있으면 대기)
	while ( !( UCSR1A & (1<<UDRE)) );
 384:	90 91 9b 00 	lds	r25, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
 388:	95 ff       	sbrs	r25, 5
 38a:	fc cf       	rjmp	.-8      	; 0x384 <USART1_Transmit>
	// buffer안에 데이터가 들어오면 데이터를 송신
	UDR1 = data; // UDR1에 들어온 data를 저장한다.
 38c:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
 390:	08 95       	ret

00000392 <USART1_TransNum>:
}

void USART1_TransNum(int num) // int형 data를 uart1으로 전송해 출력
{
 392:	ef 92       	push	r14
 394:	ff 92       	push	r15
 396:	0f 93       	push	r16
 398:	1f 93       	push	r17
 39a:	cf 93       	push	r28
 39c:	df 93       	push	r29
 39e:	ec 01       	movw	r28, r24
	int j;
	if(num < 0) // data가 음수라면
 3a0:	99 23       	and	r25, r25
 3a2:	2c f4       	brge	.+10     	; 0x3ae <USART1_TransNum+0x1c>
	{
		USART1_Transmit('-'); // -를 출력해주고
 3a4:	8d e2       	ldi	r24, 0x2D	; 45
 3a6:	ee df       	rcall	.-36     	; 0x384 <USART1_Transmit>
		num = -num; // 절댓값 처리해준다.
 3a8:	d1 95       	neg	r29
 3aa:	c1 95       	neg	r28
 3ac:	d1 09       	sbc	r29, r1
	// buffer안에 데이터가 들어오면 데이터를 송신
	UDR1 = data; // UDR1에 들어온 data를 저장한다.
}

void USART1_TransNum(int num) // int형 data를 uart1으로 전송해 출력
{
 3ae:	08 ee       	ldi	r16, 0xE8	; 232
 3b0:	13 e0       	ldi	r17, 0x03	; 3
 3b2:	0f c0       	rjmp	.+30     	; 0x3d2 <USART1_TransNum+0x40>
		num = -num; // 절댓값 처리해준다.
	}
	
	for(j = 1000 ; j > 0; j /= 10) // 10000의 자리수터 천천히 출력
	{
		USART1_Transmit((num/j) + 48);
 3b4:	ce 01       	movw	r24, r28
 3b6:	b8 01       	movw	r22, r16
 3b8:	d1 d3       	rcall	.+1954   	; 0xb5c <__divmodhi4>
 3ba:	e8 2e       	mov	r14, r24
 3bc:	f9 2e       	mov	r15, r25
 3be:	80 e3       	ldi	r24, 0x30	; 48
 3c0:	86 0f       	add	r24, r22
 3c2:	e0 df       	rcall	.-64     	; 0x384 <USART1_Transmit>
		// 아스키 코드로 '0'은 48이므로 48을 더해 송신한다.
		num %= j; // 첫번째 자리를 제외한다. (예. 12345면 2345로 만듦)
 3c4:	ce 2d       	mov	r28, r14
 3c6:	df 2d       	mov	r29, r15
	{
		USART1_Transmit('-'); // -를 출력해주고
		num = -num; // 절댓값 처리해준다.
	}
	
	for(j = 1000 ; j > 0; j /= 10) // 10000의 자리수터 천천히 출력
 3c8:	c8 01       	movw	r24, r16
 3ca:	6a e0       	ldi	r22, 0x0A	; 10
 3cc:	70 e0       	ldi	r23, 0x00	; 0
 3ce:	c6 d3       	rcall	.+1932   	; 0xb5c <__divmodhi4>
 3d0:	8b 01       	movw	r16, r22
 3d2:	10 16       	cp	r1, r16
 3d4:	11 06       	cpc	r1, r17
 3d6:	74 f3       	brlt	.-36     	; 0x3b4 <USART1_TransNum+0x22>
	{
		USART1_Transmit((num/j) + 48);
		// 아스키 코드로 '0'은 48이므로 48을 더해 송신한다.
		num %= j; // 첫번째 자리를 제외한다. (예. 12345면 2345로 만듦)
	}
 3d8:	df 91       	pop	r29
 3da:	cf 91       	pop	r28
 3dc:	1f 91       	pop	r17
 3de:	0f 91       	pop	r16
 3e0:	ff 90       	pop	r15
 3e2:	ef 90       	pop	r14
 3e4:	08 95       	ret

000003e6 <__vector_10>:
	int t_th = 1/((1/298.15)+(1/3650.0)*(ln(r_th/R0)))-273.15;
	return t_th;
}

ISR(TIMER2_OVF_vect) // 10ms
{
 3e6:	1f 92       	push	r1
 3e8:	0f 92       	push	r0
 3ea:	0f b6       	in	r0, 0x3f	; 63
 3ec:	0f 92       	push	r0
 3ee:	11 24       	eor	r1, r1
 3f0:	0b b6       	in	r0, 0x3b	; 59
 3f2:	0f 92       	push	r0
 3f4:	2f 93       	push	r18
 3f6:	3f 93       	push	r19
 3f8:	4f 93       	push	r20
 3fa:	5f 93       	push	r21
 3fc:	6f 93       	push	r22
 3fe:	7f 93       	push	r23
 400:	8f 93       	push	r24
 402:	9f 93       	push	r25
 404:	af 93       	push	r26
 406:	bf 93       	push	r27
 408:	cf 93       	push	r28
 40a:	df 93       	push	r29
 40c:	ef 93       	push	r30
 40e:	ff 93       	push	r31
	
	cli(); // 제어주기 내에서 이루어지는 것들이 우선이기 때문
 410:	f8 94       	cli
	// get Sensor
	for(int i=0;i<4;i++) adc[i] = get_adc(i); // 0~3번까지의 ADC값을 받아온다.
 412:	c0 e0       	ldi	r28, 0x00	; 0
 414:	d0 e0       	ldi	r29, 0x00	; 0
 416:	0a c0       	rjmp	.+20     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 418:	ce 01       	movw	r24, r28
 41a:	a5 df       	rcall	.-182    	; 0x366 <get_adc>
 41c:	fe 01       	movw	r30, r28
 41e:	ee 0f       	add	r30, r30
 420:	ff 1f       	adc	r31, r31
 422:	ea 5f       	subi	r30, 0xFA	; 250
 424:	fe 4f       	sbci	r31, 0xFE	; 254
 426:	91 83       	std	Z+1, r25	; 0x01
 428:	80 83       	st	Z, r24
 42a:	21 96       	adiw	r28, 0x01	; 1
 42c:	c4 30       	cpi	r28, 0x04	; 4
 42e:	d1 05       	cpc	r29, r1
 430:	9c f3       	brlt	.-26     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
	
	USART1_TransNum(Register_adc(adc[0]));
 432:	c6 e0       	ldi	r28, 0x06	; 6
 434:	d1 e0       	ldi	r29, 0x01	; 1
 436:	88 81       	ld	r24, Y
 438:	99 81       	ldd	r25, Y+1	; 0x01
 43a:	aa de       	rcall	.-684    	; 0x190 <Register_adc>
 43c:	aa df       	rcall	.-172    	; 0x392 <USART1_TransNum>
	USART1_Transmit(',');
 43e:	8c e2       	ldi	r24, 0x2C	; 44
 440:	a1 df       	rcall	.-190    	; 0x384 <USART1_Transmit>
	USART1_TransNum(CDS(adc[1]));
 442:	8a 81       	ldd	r24, Y+2	; 0x02
 444:	9b 81       	ldd	r25, Y+3	; 0x03
 446:	c0 de       	rcall	.-640    	; 0x1c8 <CDS>
 448:	a4 df       	rcall	.-184    	; 0x392 <USART1_TransNum>
	USART1_Transmit(',');
 44a:	8c e2       	ldi	r24, 0x2C	; 44
 44c:	9b df       	rcall	.-202    	; 0x384 <USART1_Transmit>
	USART1_TransNum(LM35(adc[2]));
 44e:	8c 81       	ldd	r24, Y+4	; 0x04
 450:	9d 81       	ldd	r25, Y+5	; 0x05
 452:	1d df       	rcall	.-454    	; 0x28e <LM35>
 454:	9e df       	rcall	.-196    	; 0x392 <USART1_TransNum>
	USART1_Transmit(',');
 456:	8c e2       	ldi	r24, 0x2C	; 44
 458:	95 df       	rcall	.-214    	; 0x384 <USART1_Transmit>
 45a:	8e 81       	ldd	r24, Y+6	; 0x06
	USART1_TransNum(Thermister(adc[3]));
 45c:	9f 81       	ldd	r25, Y+7	; 0x07
 45e:	36 df       	rcall	.-404    	; 0x2cc <Thermister>
 460:	98 df       	rcall	.-208    	; 0x392 <USART1_TransNum>
 462:	8d e0       	ldi	r24, 0x0D	; 13
 464:	8f df       	rcall	.-226    	; 0x384 <USART1_Transmit>
 466:	83 e6       	ldi	r24, 0x63	; 99
	USART1_Transmit(0x0d);
 468:	84 bd       	out	0x24, r24	; 36
 46a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
	// 가변저항, CDS, LM35, Thermister 순으로 보냄
	
	// 휴지기가 제어주기의 20%는 되어야 함
	TCNT2 = 255-156;
 46e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
	// TCNT2 값을 99로 초기화 함으로써 다시 10ms후 Overflow Intterupt가 발생하게 함
	
	cnt++;
 472:	01 96       	adiw	r24, 0x01	; 1
 474:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 478:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 47c:	78 94       	sei
 47e:	ff 91       	pop	r31
 480:	ef 91       	pop	r30
 482:	df 91       	pop	r29
	sei(); // 다시 전역 인터럽트 활성화
 484:	cf 91       	pop	r28
}
 486:	bf 91       	pop	r27
 488:	af 91       	pop	r26
 48a:	9f 91       	pop	r25
 48c:	8f 91       	pop	r24
 48e:	7f 91       	pop	r23
 490:	6f 91       	pop	r22
 492:	5f 91       	pop	r21
 494:	4f 91       	pop	r20
 496:	3f 91       	pop	r19
 498:	2f 91       	pop	r18
 49a:	0f 90       	pop	r0
 49c:	0b be       	out	0x3b, r0	; 59
 49e:	0f 90       	pop	r0
 4a0:	0f be       	out	0x3f, r0	; 63
 4a2:	0f 90       	pop	r0
 4a4:	1f 90       	pop	r1
 4a6:	18 95       	reti

000004a8 <__subsf3>:
 4a8:	50 58       	subi	r21, 0x80	; 128

000004aa <__addsf3>:
 4aa:	bb 27       	eor	r27, r27
 4ac:	aa 27       	eor	r26, r26
 4ae:	0e d0       	rcall	.+28     	; 0x4cc <__addsf3x>
 4b0:	4d c1       	rjmp	.+666    	; 0x74c <__fp_round>
 4b2:	3e d1       	rcall	.+636    	; 0x730 <__fp_pscA>
 4b4:	30 f0       	brcs	.+12     	; 0x4c2 <__addsf3+0x18>
 4b6:	43 d1       	rcall	.+646    	; 0x73e <__fp_pscB>
 4b8:	20 f0       	brcs	.+8      	; 0x4c2 <__addsf3+0x18>
 4ba:	31 f4       	brne	.+12     	; 0x4c8 <__addsf3+0x1e>
 4bc:	9f 3f       	cpi	r25, 0xFF	; 255
 4be:	11 f4       	brne	.+4      	; 0x4c4 <__addsf3+0x1a>
 4c0:	1e f4       	brtc	.+6      	; 0x4c8 <__addsf3+0x1e>
 4c2:	33 c1       	rjmp	.+614    	; 0x72a <__fp_nan>
 4c4:	0e f4       	brtc	.+2      	; 0x4c8 <__addsf3+0x1e>
 4c6:	e0 95       	com	r30
 4c8:	e7 fb       	bst	r30, 7
 4ca:	29 c1       	rjmp	.+594    	; 0x71e <__fp_inf>

000004cc <__addsf3x>:
 4cc:	e9 2f       	mov	r30, r25
 4ce:	4f d1       	rcall	.+670    	; 0x76e <__fp_split3>
 4d0:	80 f3       	brcs	.-32     	; 0x4b2 <__addsf3+0x8>
 4d2:	ba 17       	cp	r27, r26
 4d4:	62 07       	cpc	r22, r18
 4d6:	73 07       	cpc	r23, r19
 4d8:	84 07       	cpc	r24, r20
 4da:	95 07       	cpc	r25, r21
 4dc:	18 f0       	brcs	.+6      	; 0x4e4 <__addsf3x+0x18>
 4de:	71 f4       	brne	.+28     	; 0x4fc <__addsf3x+0x30>
 4e0:	9e f5       	brtc	.+102    	; 0x548 <__addsf3x+0x7c>
 4e2:	67 c1       	rjmp	.+718    	; 0x7b2 <__fp_zero>
 4e4:	0e f4       	brtc	.+2      	; 0x4e8 <__addsf3x+0x1c>
 4e6:	e0 95       	com	r30
 4e8:	0b 2e       	mov	r0, r27
 4ea:	ba 2f       	mov	r27, r26
 4ec:	a0 2d       	mov	r26, r0
 4ee:	0b 01       	movw	r0, r22
 4f0:	b9 01       	movw	r22, r18
 4f2:	90 01       	movw	r18, r0
 4f4:	0c 01       	movw	r0, r24
 4f6:	ca 01       	movw	r24, r20
 4f8:	a0 01       	movw	r20, r0
 4fa:	11 24       	eor	r1, r1
 4fc:	ff 27       	eor	r31, r31
 4fe:	59 1b       	sub	r21, r25
 500:	99 f0       	breq	.+38     	; 0x528 <__addsf3x+0x5c>
 502:	59 3f       	cpi	r21, 0xF9	; 249
 504:	50 f4       	brcc	.+20     	; 0x51a <__addsf3x+0x4e>
 506:	50 3e       	cpi	r21, 0xE0	; 224
 508:	68 f1       	brcs	.+90     	; 0x564 <__addsf3x+0x98>
 50a:	1a 16       	cp	r1, r26
 50c:	f0 40       	sbci	r31, 0x00	; 0
 50e:	a2 2f       	mov	r26, r18
 510:	23 2f       	mov	r18, r19
 512:	34 2f       	mov	r19, r20
 514:	44 27       	eor	r20, r20
 516:	58 5f       	subi	r21, 0xF8	; 248
 518:	f3 cf       	rjmp	.-26     	; 0x500 <__addsf3x+0x34>
 51a:	46 95       	lsr	r20
 51c:	37 95       	ror	r19
 51e:	27 95       	ror	r18
 520:	a7 95       	ror	r26
 522:	f0 40       	sbci	r31, 0x00	; 0
 524:	53 95       	inc	r21
 526:	c9 f7       	brne	.-14     	; 0x51a <__addsf3x+0x4e>
 528:	7e f4       	brtc	.+30     	; 0x548 <__addsf3x+0x7c>
 52a:	1f 16       	cp	r1, r31
 52c:	ba 0b       	sbc	r27, r26
 52e:	62 0b       	sbc	r22, r18
 530:	73 0b       	sbc	r23, r19
 532:	84 0b       	sbc	r24, r20
 534:	ba f0       	brmi	.+46     	; 0x564 <__addsf3x+0x98>
 536:	91 50       	subi	r25, 0x01	; 1
 538:	a1 f0       	breq	.+40     	; 0x562 <__addsf3x+0x96>
 53a:	ff 0f       	add	r31, r31
 53c:	bb 1f       	adc	r27, r27
 53e:	66 1f       	adc	r22, r22
 540:	77 1f       	adc	r23, r23
 542:	88 1f       	adc	r24, r24
 544:	c2 f7       	brpl	.-16     	; 0x536 <__addsf3x+0x6a>
 546:	0e c0       	rjmp	.+28     	; 0x564 <__addsf3x+0x98>
 548:	ba 0f       	add	r27, r26
 54a:	62 1f       	adc	r22, r18
 54c:	73 1f       	adc	r23, r19
 54e:	84 1f       	adc	r24, r20
 550:	48 f4       	brcc	.+18     	; 0x564 <__addsf3x+0x98>
 552:	87 95       	ror	r24
 554:	77 95       	ror	r23
 556:	67 95       	ror	r22
 558:	b7 95       	ror	r27
 55a:	f7 95       	ror	r31
 55c:	9e 3f       	cpi	r25, 0xFE	; 254
 55e:	08 f0       	brcs	.+2      	; 0x562 <__addsf3x+0x96>
 560:	b3 cf       	rjmp	.-154    	; 0x4c8 <__addsf3+0x1e>
 562:	93 95       	inc	r25
 564:	88 0f       	add	r24, r24
 566:	08 f0       	brcs	.+2      	; 0x56a <__addsf3x+0x9e>
 568:	99 27       	eor	r25, r25
 56a:	ee 0f       	add	r30, r30
 56c:	97 95       	ror	r25
 56e:	87 95       	ror	r24
 570:	08 95       	ret

00000572 <__divsf3>:
 572:	0c d0       	rcall	.+24     	; 0x58c <__divsf3x>
 574:	eb c0       	rjmp	.+470    	; 0x74c <__fp_round>
 576:	e3 d0       	rcall	.+454    	; 0x73e <__fp_pscB>
 578:	40 f0       	brcs	.+16     	; 0x58a <__divsf3+0x18>
 57a:	da d0       	rcall	.+436    	; 0x730 <__fp_pscA>
 57c:	30 f0       	brcs	.+12     	; 0x58a <__divsf3+0x18>
 57e:	21 f4       	brne	.+8      	; 0x588 <__divsf3+0x16>
 580:	5f 3f       	cpi	r21, 0xFF	; 255
 582:	19 f0       	breq	.+6      	; 0x58a <__divsf3+0x18>
 584:	cc c0       	rjmp	.+408    	; 0x71e <__fp_inf>
 586:	51 11       	cpse	r21, r1
 588:	15 c1       	rjmp	.+554    	; 0x7b4 <__fp_szero>
 58a:	cf c0       	rjmp	.+414    	; 0x72a <__fp_nan>

0000058c <__divsf3x>:
 58c:	f0 d0       	rcall	.+480    	; 0x76e <__fp_split3>
 58e:	98 f3       	brcs	.-26     	; 0x576 <__divsf3+0x4>

00000590 <__divsf3_pse>:
 590:	99 23       	and	r25, r25
 592:	c9 f3       	breq	.-14     	; 0x586 <__divsf3+0x14>
 594:	55 23       	and	r21, r21
 596:	b1 f3       	breq	.-20     	; 0x584 <__divsf3+0x12>
 598:	95 1b       	sub	r25, r21
 59a:	55 0b       	sbc	r21, r21
 59c:	bb 27       	eor	r27, r27
 59e:	aa 27       	eor	r26, r26
 5a0:	62 17       	cp	r22, r18
 5a2:	73 07       	cpc	r23, r19
 5a4:	84 07       	cpc	r24, r20
 5a6:	38 f0       	brcs	.+14     	; 0x5b6 <__divsf3_pse+0x26>
 5a8:	9f 5f       	subi	r25, 0xFF	; 255
 5aa:	5f 4f       	sbci	r21, 0xFF	; 255
 5ac:	22 0f       	add	r18, r18
 5ae:	33 1f       	adc	r19, r19
 5b0:	44 1f       	adc	r20, r20
 5b2:	aa 1f       	adc	r26, r26
 5b4:	a9 f3       	breq	.-22     	; 0x5a0 <__divsf3_pse+0x10>
 5b6:	33 d0       	rcall	.+102    	; 0x61e <__divsf3_pse+0x8e>
 5b8:	0e 2e       	mov	r0, r30
 5ba:	3a f0       	brmi	.+14     	; 0x5ca <__divsf3_pse+0x3a>
 5bc:	e0 e8       	ldi	r30, 0x80	; 128
 5be:	30 d0       	rcall	.+96     	; 0x620 <__divsf3_pse+0x90>
 5c0:	91 50       	subi	r25, 0x01	; 1
 5c2:	50 40       	sbci	r21, 0x00	; 0
 5c4:	e6 95       	lsr	r30
 5c6:	00 1c       	adc	r0, r0
 5c8:	ca f7       	brpl	.-14     	; 0x5bc <__divsf3_pse+0x2c>
 5ca:	29 d0       	rcall	.+82     	; 0x61e <__divsf3_pse+0x8e>
 5cc:	fe 2f       	mov	r31, r30
 5ce:	27 d0       	rcall	.+78     	; 0x61e <__divsf3_pse+0x8e>
 5d0:	66 0f       	add	r22, r22
 5d2:	77 1f       	adc	r23, r23
 5d4:	88 1f       	adc	r24, r24
 5d6:	bb 1f       	adc	r27, r27
 5d8:	26 17       	cp	r18, r22
 5da:	37 07       	cpc	r19, r23
 5dc:	48 07       	cpc	r20, r24
 5de:	ab 07       	cpc	r26, r27
 5e0:	b0 e8       	ldi	r27, 0x80	; 128
 5e2:	09 f0       	breq	.+2      	; 0x5e6 <__divsf3_pse+0x56>
 5e4:	bb 0b       	sbc	r27, r27
 5e6:	80 2d       	mov	r24, r0
 5e8:	bf 01       	movw	r22, r30
 5ea:	ff 27       	eor	r31, r31
 5ec:	93 58       	subi	r25, 0x83	; 131
 5ee:	5f 4f       	sbci	r21, 0xFF	; 255
 5f0:	2a f0       	brmi	.+10     	; 0x5fc <__divsf3_pse+0x6c>
 5f2:	9e 3f       	cpi	r25, 0xFE	; 254
 5f4:	51 05       	cpc	r21, r1
 5f6:	68 f0       	brcs	.+26     	; 0x612 <__divsf3_pse+0x82>
 5f8:	92 c0       	rjmp	.+292    	; 0x71e <__fp_inf>
 5fa:	dc c0       	rjmp	.+440    	; 0x7b4 <__fp_szero>
 5fc:	5f 3f       	cpi	r21, 0xFF	; 255
 5fe:	ec f3       	brlt	.-6      	; 0x5fa <__divsf3_pse+0x6a>
 600:	98 3e       	cpi	r25, 0xE8	; 232
 602:	dc f3       	brlt	.-10     	; 0x5fa <__divsf3_pse+0x6a>
 604:	86 95       	lsr	r24
 606:	77 95       	ror	r23
 608:	67 95       	ror	r22
 60a:	b7 95       	ror	r27
 60c:	f7 95       	ror	r31
 60e:	9f 5f       	subi	r25, 0xFF	; 255
 610:	c9 f7       	brne	.-14     	; 0x604 <__divsf3_pse+0x74>
 612:	88 0f       	add	r24, r24
 614:	91 1d       	adc	r25, r1
 616:	96 95       	lsr	r25
 618:	87 95       	ror	r24
 61a:	97 f9       	bld	r25, 7
 61c:	08 95       	ret
 61e:	e1 e0       	ldi	r30, 0x01	; 1
 620:	66 0f       	add	r22, r22
 622:	77 1f       	adc	r23, r23
 624:	88 1f       	adc	r24, r24
 626:	bb 1f       	adc	r27, r27
 628:	62 17       	cp	r22, r18
 62a:	73 07       	cpc	r23, r19
 62c:	84 07       	cpc	r24, r20
 62e:	ba 07       	cpc	r27, r26
 630:	20 f0       	brcs	.+8      	; 0x63a <__divsf3_pse+0xaa>
 632:	62 1b       	sub	r22, r18
 634:	73 0b       	sbc	r23, r19
 636:	84 0b       	sbc	r24, r20
 638:	ba 0b       	sbc	r27, r26
 63a:	ee 1f       	adc	r30, r30
 63c:	88 f7       	brcc	.-30     	; 0x620 <__divsf3_pse+0x90>
 63e:	e0 95       	com	r30
 640:	08 95       	ret

00000642 <__fixsfsi>:
 642:	04 d0       	rcall	.+8      	; 0x64c <__fixunssfsi>
 644:	68 94       	set
 646:	b1 11       	cpse	r27, r1
 648:	b5 c0       	rjmp	.+362    	; 0x7b4 <__fp_szero>
 64a:	08 95       	ret

0000064c <__fixunssfsi>:
 64c:	98 d0       	rcall	.+304    	; 0x77e <__fp_splitA>
 64e:	88 f0       	brcs	.+34     	; 0x672 <__fixunssfsi+0x26>
 650:	9f 57       	subi	r25, 0x7F	; 127
 652:	90 f0       	brcs	.+36     	; 0x678 <__fixunssfsi+0x2c>
 654:	b9 2f       	mov	r27, r25
 656:	99 27       	eor	r25, r25
 658:	b7 51       	subi	r27, 0x17	; 23
 65a:	a0 f0       	brcs	.+40     	; 0x684 <__fixunssfsi+0x38>
 65c:	d1 f0       	breq	.+52     	; 0x692 <__fixunssfsi+0x46>
 65e:	66 0f       	add	r22, r22
 660:	77 1f       	adc	r23, r23
 662:	88 1f       	adc	r24, r24
 664:	99 1f       	adc	r25, r25
 666:	1a f0       	brmi	.+6      	; 0x66e <__fixunssfsi+0x22>
 668:	ba 95       	dec	r27
 66a:	c9 f7       	brne	.-14     	; 0x65e <__fixunssfsi+0x12>
 66c:	12 c0       	rjmp	.+36     	; 0x692 <__fixunssfsi+0x46>
 66e:	b1 30       	cpi	r27, 0x01	; 1
 670:	81 f0       	breq	.+32     	; 0x692 <__fixunssfsi+0x46>
 672:	9f d0       	rcall	.+318    	; 0x7b2 <__fp_zero>
 674:	b1 e0       	ldi	r27, 0x01	; 1
 676:	08 95       	ret
 678:	9c c0       	rjmp	.+312    	; 0x7b2 <__fp_zero>
 67a:	67 2f       	mov	r22, r23
 67c:	78 2f       	mov	r23, r24
 67e:	88 27       	eor	r24, r24
 680:	b8 5f       	subi	r27, 0xF8	; 248
 682:	39 f0       	breq	.+14     	; 0x692 <__fixunssfsi+0x46>
 684:	b9 3f       	cpi	r27, 0xF9	; 249
 686:	cc f3       	brlt	.-14     	; 0x67a <__fixunssfsi+0x2e>
 688:	86 95       	lsr	r24
 68a:	77 95       	ror	r23
 68c:	67 95       	ror	r22
 68e:	b3 95       	inc	r27
 690:	d9 f7       	brne	.-10     	; 0x688 <__fixunssfsi+0x3c>
 692:	3e f4       	brtc	.+14     	; 0x6a2 <__fixunssfsi+0x56>
 694:	90 95       	com	r25
 696:	80 95       	com	r24
 698:	70 95       	com	r23
 69a:	61 95       	neg	r22
 69c:	7f 4f       	sbci	r23, 0xFF	; 255
 69e:	8f 4f       	sbci	r24, 0xFF	; 255
 6a0:	9f 4f       	sbci	r25, 0xFF	; 255
 6a2:	08 95       	ret

000006a4 <__floatunsisf>:
 6a4:	e8 94       	clt
 6a6:	09 c0       	rjmp	.+18     	; 0x6ba <__floatsisf+0x12>

000006a8 <__floatsisf>:
 6a8:	97 fb       	bst	r25, 7
 6aa:	3e f4       	brtc	.+14     	; 0x6ba <__floatsisf+0x12>
 6ac:	90 95       	com	r25
 6ae:	80 95       	com	r24
 6b0:	70 95       	com	r23
 6b2:	61 95       	neg	r22
 6b4:	7f 4f       	sbci	r23, 0xFF	; 255
 6b6:	8f 4f       	sbci	r24, 0xFF	; 255
 6b8:	9f 4f       	sbci	r25, 0xFF	; 255
 6ba:	99 23       	and	r25, r25
 6bc:	a9 f0       	breq	.+42     	; 0x6e8 <__floatsisf+0x40>
 6be:	f9 2f       	mov	r31, r25
 6c0:	96 e9       	ldi	r25, 0x96	; 150
 6c2:	bb 27       	eor	r27, r27
 6c4:	93 95       	inc	r25
 6c6:	f6 95       	lsr	r31
 6c8:	87 95       	ror	r24
 6ca:	77 95       	ror	r23
 6cc:	67 95       	ror	r22
 6ce:	b7 95       	ror	r27
 6d0:	f1 11       	cpse	r31, r1
 6d2:	f8 cf       	rjmp	.-16     	; 0x6c4 <__floatsisf+0x1c>
 6d4:	fa f4       	brpl	.+62     	; 0x714 <__floatsisf+0x6c>
 6d6:	bb 0f       	add	r27, r27
 6d8:	11 f4       	brne	.+4      	; 0x6de <__floatsisf+0x36>
 6da:	60 ff       	sbrs	r22, 0
 6dc:	1b c0       	rjmp	.+54     	; 0x714 <__floatsisf+0x6c>
 6de:	6f 5f       	subi	r22, 0xFF	; 255
 6e0:	7f 4f       	sbci	r23, 0xFF	; 255
 6e2:	8f 4f       	sbci	r24, 0xFF	; 255
 6e4:	9f 4f       	sbci	r25, 0xFF	; 255
 6e6:	16 c0       	rjmp	.+44     	; 0x714 <__floatsisf+0x6c>
 6e8:	88 23       	and	r24, r24
 6ea:	11 f0       	breq	.+4      	; 0x6f0 <__floatsisf+0x48>
 6ec:	96 e9       	ldi	r25, 0x96	; 150
 6ee:	11 c0       	rjmp	.+34     	; 0x712 <__floatsisf+0x6a>
 6f0:	77 23       	and	r23, r23
 6f2:	21 f0       	breq	.+8      	; 0x6fc <__floatsisf+0x54>
 6f4:	9e e8       	ldi	r25, 0x8E	; 142
 6f6:	87 2f       	mov	r24, r23
 6f8:	76 2f       	mov	r23, r22
 6fa:	05 c0       	rjmp	.+10     	; 0x706 <__floatsisf+0x5e>
 6fc:	66 23       	and	r22, r22
 6fe:	71 f0       	breq	.+28     	; 0x71c <__floatsisf+0x74>
 700:	96 e8       	ldi	r25, 0x86	; 134
 702:	86 2f       	mov	r24, r22
 704:	70 e0       	ldi	r23, 0x00	; 0
 706:	60 e0       	ldi	r22, 0x00	; 0
 708:	2a f0       	brmi	.+10     	; 0x714 <__floatsisf+0x6c>
 70a:	9a 95       	dec	r25
 70c:	66 0f       	add	r22, r22
 70e:	77 1f       	adc	r23, r23
 710:	88 1f       	adc	r24, r24
 712:	da f7       	brpl	.-10     	; 0x70a <__floatsisf+0x62>
 714:	88 0f       	add	r24, r24
 716:	96 95       	lsr	r25
 718:	87 95       	ror	r24
 71a:	97 f9       	bld	r25, 7
 71c:	08 95       	ret

0000071e <__fp_inf>:
 71e:	97 f9       	bld	r25, 7
 720:	9f 67       	ori	r25, 0x7F	; 127
 722:	80 e8       	ldi	r24, 0x80	; 128
 724:	70 e0       	ldi	r23, 0x00	; 0
 726:	60 e0       	ldi	r22, 0x00	; 0
 728:	08 95       	ret

0000072a <__fp_nan>:
 72a:	9f ef       	ldi	r25, 0xFF	; 255
 72c:	80 ec       	ldi	r24, 0xC0	; 192
 72e:	08 95       	ret

00000730 <__fp_pscA>:
 730:	00 24       	eor	r0, r0
 732:	0a 94       	dec	r0
 734:	16 16       	cp	r1, r22
 736:	17 06       	cpc	r1, r23
 738:	18 06       	cpc	r1, r24
 73a:	09 06       	cpc	r0, r25
 73c:	08 95       	ret

0000073e <__fp_pscB>:
 73e:	00 24       	eor	r0, r0
 740:	0a 94       	dec	r0
 742:	12 16       	cp	r1, r18
 744:	13 06       	cpc	r1, r19
 746:	14 06       	cpc	r1, r20
 748:	05 06       	cpc	r0, r21
 74a:	08 95       	ret

0000074c <__fp_round>:
 74c:	09 2e       	mov	r0, r25
 74e:	03 94       	inc	r0
 750:	00 0c       	add	r0, r0
 752:	11 f4       	brne	.+4      	; 0x758 <__fp_round+0xc>
 754:	88 23       	and	r24, r24
 756:	52 f0       	brmi	.+20     	; 0x76c <__fp_round+0x20>
 758:	bb 0f       	add	r27, r27
 75a:	40 f4       	brcc	.+16     	; 0x76c <__fp_round+0x20>
 75c:	bf 2b       	or	r27, r31
 75e:	11 f4       	brne	.+4      	; 0x764 <__fp_round+0x18>
 760:	60 ff       	sbrs	r22, 0
 762:	04 c0       	rjmp	.+8      	; 0x76c <__fp_round+0x20>
 764:	6f 5f       	subi	r22, 0xFF	; 255
 766:	7f 4f       	sbci	r23, 0xFF	; 255
 768:	8f 4f       	sbci	r24, 0xFF	; 255
 76a:	9f 4f       	sbci	r25, 0xFF	; 255
 76c:	08 95       	ret

0000076e <__fp_split3>:
 76e:	57 fd       	sbrc	r21, 7
 770:	90 58       	subi	r25, 0x80	; 128
 772:	44 0f       	add	r20, r20
 774:	55 1f       	adc	r21, r21
 776:	59 f0       	breq	.+22     	; 0x78e <__fp_splitA+0x10>
 778:	5f 3f       	cpi	r21, 0xFF	; 255
 77a:	71 f0       	breq	.+28     	; 0x798 <__fp_splitA+0x1a>
 77c:	47 95       	ror	r20

0000077e <__fp_splitA>:
 77e:	88 0f       	add	r24, r24
 780:	97 fb       	bst	r25, 7
 782:	99 1f       	adc	r25, r25
 784:	61 f0       	breq	.+24     	; 0x79e <__fp_splitA+0x20>
 786:	9f 3f       	cpi	r25, 0xFF	; 255
 788:	79 f0       	breq	.+30     	; 0x7a8 <__fp_splitA+0x2a>
 78a:	87 95       	ror	r24
 78c:	08 95       	ret
 78e:	12 16       	cp	r1, r18
 790:	13 06       	cpc	r1, r19
 792:	14 06       	cpc	r1, r20
 794:	55 1f       	adc	r21, r21
 796:	f2 cf       	rjmp	.-28     	; 0x77c <__fp_split3+0xe>
 798:	46 95       	lsr	r20
 79a:	f1 df       	rcall	.-30     	; 0x77e <__fp_splitA>
 79c:	08 c0       	rjmp	.+16     	; 0x7ae <__fp_splitA+0x30>
 79e:	16 16       	cp	r1, r22
 7a0:	17 06       	cpc	r1, r23
 7a2:	18 06       	cpc	r1, r24
 7a4:	99 1f       	adc	r25, r25
 7a6:	f1 cf       	rjmp	.-30     	; 0x78a <__fp_splitA+0xc>
 7a8:	86 95       	lsr	r24
 7aa:	71 05       	cpc	r23, r1
 7ac:	61 05       	cpc	r22, r1
 7ae:	08 94       	sec
 7b0:	08 95       	ret

000007b2 <__fp_zero>:
 7b2:	e8 94       	clt

000007b4 <__fp_szero>:
 7b4:	bb 27       	eor	r27, r27
 7b6:	66 27       	eor	r22, r22
 7b8:	77 27       	eor	r23, r23
 7ba:	cb 01       	movw	r24, r22
 7bc:	97 f9       	bld	r25, 7
 7be:	08 95       	ret

000007c0 <log10>:
 7c0:	0a d0       	rcall	.+20     	; 0x7d6 <log>
 7c2:	29 ed       	ldi	r18, 0xD9	; 217
 7c4:	3b e5       	ldi	r19, 0x5B	; 91
 7c6:	4e ed       	ldi	r20, 0xDE	; 222
 7c8:	5e e3       	ldi	r21, 0x3E	; 62
 7ca:	45 c0       	rjmp	.+138    	; 0x856 <__mulsf3>
 7cc:	0e f0       	brts	.+2      	; 0x7d0 <log10+0x10>
 7ce:	23 c1       	rjmp	.+582    	; 0xa16 <__fp_mpack>
 7d0:	ac cf       	rjmp	.-168    	; 0x72a <__fp_nan>
 7d2:	68 94       	set
 7d4:	a4 cf       	rjmp	.-184    	; 0x71e <__fp_inf>

000007d6 <log>:
 7d6:	d3 df       	rcall	.-90     	; 0x77e <__fp_splitA>
 7d8:	c8 f3       	brcs	.-14     	; 0x7cc <log10+0xc>
 7da:	99 23       	and	r25, r25
 7dc:	d1 f3       	breq	.-12     	; 0x7d2 <log10+0x12>
 7de:	c6 f3       	brts	.-16     	; 0x7d0 <log10+0x10>
 7e0:	df 93       	push	r29
 7e2:	cf 93       	push	r28
 7e4:	1f 93       	push	r17
 7e6:	0f 93       	push	r16
 7e8:	ff 92       	push	r15
 7ea:	c9 2f       	mov	r28, r25
 7ec:	dd 27       	eor	r29, r29
 7ee:	88 23       	and	r24, r24
 7f0:	2a f0       	brmi	.+10     	; 0x7fc <log+0x26>
 7f2:	21 97       	sbiw	r28, 0x01	; 1
 7f4:	66 0f       	add	r22, r22
 7f6:	77 1f       	adc	r23, r23
 7f8:	88 1f       	adc	r24, r24
 7fa:	da f7       	brpl	.-10     	; 0x7f2 <log+0x1c>
 7fc:	20 e0       	ldi	r18, 0x00	; 0
 7fe:	30 e0       	ldi	r19, 0x00	; 0
 800:	40 e8       	ldi	r20, 0x80	; 128
 802:	5f eb       	ldi	r21, 0xBF	; 191
 804:	9f e3       	ldi	r25, 0x3F	; 63
 806:	88 39       	cpi	r24, 0x98	; 152
 808:	20 f0       	brcs	.+8      	; 0x812 <log+0x3c>
 80a:	80 3e       	cpi	r24, 0xE0	; 224
 80c:	30 f0       	brcs	.+12     	; 0x81a <log+0x44>
 80e:	21 96       	adiw	r28, 0x01	; 1
 810:	8f 77       	andi	r24, 0x7F	; 127
 812:	4b de       	rcall	.-874    	; 0x4aa <__addsf3>
 814:	ec e8       	ldi	r30, 0x8C	; 140
 816:	f0 e0       	ldi	r31, 0x00	; 0
 818:	03 c0       	rjmp	.+6      	; 0x820 <log+0x4a>
 81a:	47 de       	rcall	.-882    	; 0x4aa <__addsf3>
 81c:	e9 eb       	ldi	r30, 0xB9	; 185
 81e:	f0 e0       	ldi	r31, 0x00	; 0
 820:	08 d1       	rcall	.+528    	; 0xa32 <__fp_powser>
 822:	8b 01       	movw	r16, r22
 824:	be 01       	movw	r22, r28
 826:	ec 01       	movw	r28, r24
 828:	fb 2e       	mov	r15, r27
 82a:	6f 57       	subi	r22, 0x7F	; 127
 82c:	71 09       	sbc	r23, r1
 82e:	75 95       	asr	r23
 830:	77 1f       	adc	r23, r23
 832:	88 0b       	sbc	r24, r24
 834:	99 0b       	sbc	r25, r25
 836:	38 df       	rcall	.-400    	; 0x6a8 <__floatsisf>
 838:	28 e1       	ldi	r18, 0x18	; 24
 83a:	32 e7       	ldi	r19, 0x72	; 114
 83c:	41 e3       	ldi	r20, 0x31	; 49
 83e:	5f e3       	ldi	r21, 0x3F	; 63
 840:	16 d0       	rcall	.+44     	; 0x86e <__mulsf3x>
 842:	af 2d       	mov	r26, r15
 844:	98 01       	movw	r18, r16
 846:	ae 01       	movw	r20, r28
 848:	ff 90       	pop	r15
 84a:	0f 91       	pop	r16
 84c:	1f 91       	pop	r17
 84e:	cf 91       	pop	r28
 850:	df 91       	pop	r29
 852:	3c de       	rcall	.-904    	; 0x4cc <__addsf3x>
 854:	7b cf       	rjmp	.-266    	; 0x74c <__fp_round>

00000856 <__mulsf3>:
 856:	0b d0       	rcall	.+22     	; 0x86e <__mulsf3x>
 858:	79 cf       	rjmp	.-270    	; 0x74c <__fp_round>
 85a:	6a df       	rcall	.-300    	; 0x730 <__fp_pscA>
 85c:	28 f0       	brcs	.+10     	; 0x868 <__mulsf3+0x12>
 85e:	6f df       	rcall	.-290    	; 0x73e <__fp_pscB>
 860:	18 f0       	brcs	.+6      	; 0x868 <__mulsf3+0x12>
 862:	95 23       	and	r25, r21
 864:	09 f0       	breq	.+2      	; 0x868 <__mulsf3+0x12>
 866:	5b cf       	rjmp	.-330    	; 0x71e <__fp_inf>
 868:	60 cf       	rjmp	.-320    	; 0x72a <__fp_nan>
 86a:	11 24       	eor	r1, r1
 86c:	a3 cf       	rjmp	.-186    	; 0x7b4 <__fp_szero>

0000086e <__mulsf3x>:
 86e:	7f df       	rcall	.-258    	; 0x76e <__fp_split3>
 870:	a0 f3       	brcs	.-24     	; 0x85a <__mulsf3+0x4>

00000872 <__mulsf3_pse>:
 872:	95 9f       	mul	r25, r21
 874:	d1 f3       	breq	.-12     	; 0x86a <__mulsf3+0x14>
 876:	95 0f       	add	r25, r21
 878:	50 e0       	ldi	r21, 0x00	; 0
 87a:	55 1f       	adc	r21, r21
 87c:	62 9f       	mul	r22, r18
 87e:	f0 01       	movw	r30, r0
 880:	72 9f       	mul	r23, r18
 882:	bb 27       	eor	r27, r27
 884:	f0 0d       	add	r31, r0
 886:	b1 1d       	adc	r27, r1
 888:	63 9f       	mul	r22, r19
 88a:	aa 27       	eor	r26, r26
 88c:	f0 0d       	add	r31, r0
 88e:	b1 1d       	adc	r27, r1
 890:	aa 1f       	adc	r26, r26
 892:	64 9f       	mul	r22, r20
 894:	66 27       	eor	r22, r22
 896:	b0 0d       	add	r27, r0
 898:	a1 1d       	adc	r26, r1
 89a:	66 1f       	adc	r22, r22
 89c:	82 9f       	mul	r24, r18
 89e:	22 27       	eor	r18, r18
 8a0:	b0 0d       	add	r27, r0
 8a2:	a1 1d       	adc	r26, r1
 8a4:	62 1f       	adc	r22, r18
 8a6:	73 9f       	mul	r23, r19
 8a8:	b0 0d       	add	r27, r0
 8aa:	a1 1d       	adc	r26, r1
 8ac:	62 1f       	adc	r22, r18
 8ae:	83 9f       	mul	r24, r19
 8b0:	a0 0d       	add	r26, r0
 8b2:	61 1d       	adc	r22, r1
 8b4:	22 1f       	adc	r18, r18
 8b6:	74 9f       	mul	r23, r20
 8b8:	33 27       	eor	r19, r19
 8ba:	a0 0d       	add	r26, r0
 8bc:	61 1d       	adc	r22, r1
 8be:	23 1f       	adc	r18, r19
 8c0:	84 9f       	mul	r24, r20
 8c2:	60 0d       	add	r22, r0
 8c4:	21 1d       	adc	r18, r1
 8c6:	82 2f       	mov	r24, r18
 8c8:	76 2f       	mov	r23, r22
 8ca:	6a 2f       	mov	r22, r26
 8cc:	11 24       	eor	r1, r1
 8ce:	9f 57       	subi	r25, 0x7F	; 127
 8d0:	50 40       	sbci	r21, 0x00	; 0
 8d2:	8a f0       	brmi	.+34     	; 0x8f6 <__mulsf3_pse+0x84>
 8d4:	e1 f0       	breq	.+56     	; 0x90e <__mulsf3_pse+0x9c>
 8d6:	88 23       	and	r24, r24
 8d8:	4a f0       	brmi	.+18     	; 0x8ec <__mulsf3_pse+0x7a>
 8da:	ee 0f       	add	r30, r30
 8dc:	ff 1f       	adc	r31, r31
 8de:	bb 1f       	adc	r27, r27
 8e0:	66 1f       	adc	r22, r22
 8e2:	77 1f       	adc	r23, r23
 8e4:	88 1f       	adc	r24, r24
 8e6:	91 50       	subi	r25, 0x01	; 1
 8e8:	50 40       	sbci	r21, 0x00	; 0
 8ea:	a9 f7       	brne	.-22     	; 0x8d6 <__mulsf3_pse+0x64>
 8ec:	9e 3f       	cpi	r25, 0xFE	; 254
 8ee:	51 05       	cpc	r21, r1
 8f0:	70 f0       	brcs	.+28     	; 0x90e <__mulsf3_pse+0x9c>
 8f2:	15 cf       	rjmp	.-470    	; 0x71e <__fp_inf>
 8f4:	5f cf       	rjmp	.-322    	; 0x7b4 <__fp_szero>
 8f6:	5f 3f       	cpi	r21, 0xFF	; 255
 8f8:	ec f3       	brlt	.-6      	; 0x8f4 <__mulsf3_pse+0x82>
 8fa:	98 3e       	cpi	r25, 0xE8	; 232
 8fc:	dc f3       	brlt	.-10     	; 0x8f4 <__mulsf3_pse+0x82>
 8fe:	86 95       	lsr	r24
 900:	77 95       	ror	r23
 902:	67 95       	ror	r22
 904:	b7 95       	ror	r27
 906:	f7 95       	ror	r31
 908:	e7 95       	ror	r30
 90a:	9f 5f       	subi	r25, 0xFF	; 255
 90c:	c1 f7       	brne	.-16     	; 0x8fe <__mulsf3_pse+0x8c>
 90e:	fe 2b       	or	r31, r30
 910:	88 0f       	add	r24, r24
 912:	91 1d       	adc	r25, r1
 914:	96 95       	lsr	r25
 916:	87 95       	ror	r24
 918:	97 f9       	bld	r25, 7
 91a:	08 95       	ret

0000091c <pow>:
 91c:	fa 01       	movw	r30, r20
 91e:	ee 0f       	add	r30, r30
 920:	ff 1f       	adc	r31, r31
 922:	30 96       	adiw	r30, 0x00	; 0
 924:	21 05       	cpc	r18, r1
 926:	31 05       	cpc	r19, r1
 928:	99 f1       	breq	.+102    	; 0x990 <pow+0x74>
 92a:	61 15       	cp	r22, r1
 92c:	71 05       	cpc	r23, r1
 92e:	61 f4       	brne	.+24     	; 0x948 <pow+0x2c>
 930:	80 38       	cpi	r24, 0x80	; 128
 932:	bf e3       	ldi	r27, 0x3F	; 63
 934:	9b 07       	cpc	r25, r27
 936:	49 f1       	breq	.+82     	; 0x98a <pow+0x6e>
 938:	68 94       	set
 93a:	90 38       	cpi	r25, 0x80	; 128
 93c:	81 05       	cpc	r24, r1
 93e:	61 f0       	breq	.+24     	; 0x958 <pow+0x3c>
 940:	80 38       	cpi	r24, 0x80	; 128
 942:	bf ef       	ldi	r27, 0xFF	; 255
 944:	9b 07       	cpc	r25, r27
 946:	41 f0       	breq	.+16     	; 0x958 <pow+0x3c>
 948:	99 23       	and	r25, r25
 94a:	42 f5       	brpl	.+80     	; 0x99c <pow+0x80>
 94c:	ff 3f       	cpi	r31, 0xFF	; 255
 94e:	e1 05       	cpc	r30, r1
 950:	31 05       	cpc	r19, r1
 952:	21 05       	cpc	r18, r1
 954:	11 f1       	breq	.+68     	; 0x99a <pow+0x7e>
 956:	e8 94       	clt
 958:	08 94       	sec
 95a:	e7 95       	ror	r30
 95c:	d9 01       	movw	r26, r18
 95e:	aa 23       	and	r26, r26
 960:	29 f4       	brne	.+10     	; 0x96c <pow+0x50>
 962:	ab 2f       	mov	r26, r27
 964:	be 2f       	mov	r27, r30
 966:	f8 5f       	subi	r31, 0xF8	; 248
 968:	d0 f3       	brcs	.-12     	; 0x95e <pow+0x42>
 96a:	10 c0       	rjmp	.+32     	; 0x98c <pow+0x70>
 96c:	ff 5f       	subi	r31, 0xFF	; 255
 96e:	70 f4       	brcc	.+28     	; 0x98c <pow+0x70>
 970:	a6 95       	lsr	r26
 972:	e0 f7       	brcc	.-8      	; 0x96c <pow+0x50>
 974:	f7 39       	cpi	r31, 0x97	; 151
 976:	50 f0       	brcs	.+20     	; 0x98c <pow+0x70>
 978:	19 f0       	breq	.+6      	; 0x980 <pow+0x64>
 97a:	ff 3a       	cpi	r31, 0xAF	; 175
 97c:	38 f4       	brcc	.+14     	; 0x98c <pow+0x70>
 97e:	9f 77       	andi	r25, 0x7F	; 127
 980:	9f 93       	push	r25
 982:	0c d0       	rcall	.+24     	; 0x99c <pow+0x80>
 984:	0f 90       	pop	r0
 986:	07 fc       	sbrc	r0, 7
 988:	90 58       	subi	r25, 0x80	; 128
 98a:	08 95       	ret
 98c:	3e f0       	brts	.+14     	; 0x99c <pow+0x80>
 98e:	cd ce       	rjmp	.-614    	; 0x72a <__fp_nan>
 990:	60 e0       	ldi	r22, 0x00	; 0
 992:	70 e0       	ldi	r23, 0x00	; 0
 994:	80 e8       	ldi	r24, 0x80	; 128
 996:	9f e3       	ldi	r25, 0x3F	; 63
 998:	08 95       	ret
 99a:	4f e7       	ldi	r20, 0x7F	; 127
 99c:	9f 77       	andi	r25, 0x7F	; 127
 99e:	5f 93       	push	r21
 9a0:	4f 93       	push	r20
 9a2:	3f 93       	push	r19
 9a4:	2f 93       	push	r18
 9a6:	17 df       	rcall	.-466    	; 0x7d6 <log>
 9a8:	2f 91       	pop	r18
 9aa:	3f 91       	pop	r19
 9ac:	4f 91       	pop	r20
 9ae:	5f 91       	pop	r21
 9b0:	52 df       	rcall	.-348    	; 0x856 <__mulsf3>
 9b2:	05 c0       	rjmp	.+10     	; 0x9be <exp>
 9b4:	19 f4       	brne	.+6      	; 0x9bc <pow+0xa0>
 9b6:	0e f0       	brts	.+2      	; 0x9ba <pow+0x9e>
 9b8:	b2 ce       	rjmp	.-668    	; 0x71e <__fp_inf>
 9ba:	fb ce       	rjmp	.-522    	; 0x7b2 <__fp_zero>
 9bc:	b6 ce       	rjmp	.-660    	; 0x72a <__fp_nan>

000009be <exp>:
 9be:	df de       	rcall	.-578    	; 0x77e <__fp_splitA>
 9c0:	c8 f3       	brcs	.-14     	; 0x9b4 <pow+0x98>
 9c2:	96 38       	cpi	r25, 0x86	; 134
 9c4:	c0 f7       	brcc	.-16     	; 0x9b6 <pow+0x9a>
 9c6:	07 f8       	bld	r0, 7
 9c8:	0f 92       	push	r0
 9ca:	e8 94       	clt
 9cc:	2b e3       	ldi	r18, 0x3B	; 59
 9ce:	3a ea       	ldi	r19, 0xAA	; 170
 9d0:	48 eb       	ldi	r20, 0xB8	; 184
 9d2:	5f e7       	ldi	r21, 0x7F	; 127
 9d4:	4e df       	rcall	.-356    	; 0x872 <__mulsf3_pse>
 9d6:	0f 92       	push	r0
 9d8:	0f 92       	push	r0
 9da:	0f 92       	push	r0
 9dc:	4d b7       	in	r20, 0x3d	; 61
 9de:	5e b7       	in	r21, 0x3e	; 62
 9e0:	0f 92       	push	r0
 9e2:	89 d0       	rcall	.+274    	; 0xaf6 <modf>
 9e4:	e6 ee       	ldi	r30, 0xE6	; 230
 9e6:	f0 e0       	ldi	r31, 0x00	; 0
 9e8:	24 d0       	rcall	.+72     	; 0xa32 <__fp_powser>
 9ea:	4f 91       	pop	r20
 9ec:	5f 91       	pop	r21
 9ee:	ef 91       	pop	r30
 9f0:	ff 91       	pop	r31
 9f2:	e5 95       	asr	r30
 9f4:	ee 1f       	adc	r30, r30
 9f6:	ff 1f       	adc	r31, r31
 9f8:	49 f0       	breq	.+18     	; 0xa0c <exp+0x4e>
 9fa:	fe 57       	subi	r31, 0x7E	; 126
 9fc:	e0 68       	ori	r30, 0x80	; 128
 9fe:	44 27       	eor	r20, r20
 a00:	ee 0f       	add	r30, r30
 a02:	44 1f       	adc	r20, r20
 a04:	fa 95       	dec	r31
 a06:	e1 f7       	brne	.-8      	; 0xa00 <exp+0x42>
 a08:	41 95       	neg	r20
 a0a:	55 0b       	sbc	r21, r21
 a0c:	40 d0       	rcall	.+128    	; 0xa8e <ldexp>
 a0e:	0f 90       	pop	r0
 a10:	07 fe       	sbrs	r0, 7
 a12:	34 c0       	rjmp	.+104    	; 0xa7c <inverse>
 a14:	08 95       	ret

00000a16 <__fp_mpack>:
 a16:	9f 3f       	cpi	r25, 0xFF	; 255
 a18:	31 f0       	breq	.+12     	; 0xa26 <__fp_mpack_finite+0xc>

00000a1a <__fp_mpack_finite>:
 a1a:	91 50       	subi	r25, 0x01	; 1
 a1c:	20 f4       	brcc	.+8      	; 0xa26 <__fp_mpack_finite+0xc>
 a1e:	87 95       	ror	r24
 a20:	77 95       	ror	r23
 a22:	67 95       	ror	r22
 a24:	b7 95       	ror	r27
 a26:	88 0f       	add	r24, r24
 a28:	91 1d       	adc	r25, r1
 a2a:	96 95       	lsr	r25
 a2c:	87 95       	ror	r24
 a2e:	97 f9       	bld	r25, 7
 a30:	08 95       	ret

00000a32 <__fp_powser>:
 a32:	df 93       	push	r29
 a34:	cf 93       	push	r28
 a36:	1f 93       	push	r17
 a38:	0f 93       	push	r16
 a3a:	ff 92       	push	r15
 a3c:	ef 92       	push	r14
 a3e:	df 92       	push	r13
 a40:	7b 01       	movw	r14, r22
 a42:	8c 01       	movw	r16, r24
 a44:	68 94       	set
 a46:	05 c0       	rjmp	.+10     	; 0xa52 <__fp_powser+0x20>
 a48:	da 2e       	mov	r13, r26
 a4a:	ef 01       	movw	r28, r30
 a4c:	10 df       	rcall	.-480    	; 0x86e <__mulsf3x>
 a4e:	fe 01       	movw	r30, r28
 a50:	e8 94       	clt
 a52:	a5 91       	lpm	r26, Z+
 a54:	25 91       	lpm	r18, Z+
 a56:	35 91       	lpm	r19, Z+
 a58:	45 91       	lpm	r20, Z+
 a5a:	55 91       	lpm	r21, Z+
 a5c:	ae f3       	brts	.-22     	; 0xa48 <__fp_powser+0x16>
 a5e:	ef 01       	movw	r28, r30
 a60:	35 dd       	rcall	.-1430   	; 0x4cc <__addsf3x>
 a62:	fe 01       	movw	r30, r28
 a64:	97 01       	movw	r18, r14
 a66:	a8 01       	movw	r20, r16
 a68:	da 94       	dec	r13
 a6a:	79 f7       	brne	.-34     	; 0xa4a <__fp_powser+0x18>
 a6c:	df 90       	pop	r13
 a6e:	ef 90       	pop	r14
 a70:	ff 90       	pop	r15
 a72:	0f 91       	pop	r16
 a74:	1f 91       	pop	r17
 a76:	cf 91       	pop	r28
 a78:	df 91       	pop	r29
 a7a:	08 95       	ret

00000a7c <inverse>:
 a7c:	9b 01       	movw	r18, r22
 a7e:	ac 01       	movw	r20, r24
 a80:	60 e0       	ldi	r22, 0x00	; 0
 a82:	70 e0       	ldi	r23, 0x00	; 0
 a84:	80 e8       	ldi	r24, 0x80	; 128
 a86:	9f e3       	ldi	r25, 0x3F	; 63
 a88:	74 cd       	rjmp	.-1304   	; 0x572 <__divsf3>
 a8a:	49 ce       	rjmp	.-878    	; 0x71e <__fp_inf>
 a8c:	c4 cf       	rjmp	.-120    	; 0xa16 <__fp_mpack>

00000a8e <ldexp>:
 a8e:	77 de       	rcall	.-786    	; 0x77e <__fp_splitA>
 a90:	e8 f3       	brcs	.-6      	; 0xa8c <inverse+0x10>
 a92:	99 23       	and	r25, r25
 a94:	d9 f3       	breq	.-10     	; 0xa8c <inverse+0x10>
 a96:	94 0f       	add	r25, r20
 a98:	51 1d       	adc	r21, r1
 a9a:	bb f3       	brvs	.-18     	; 0xa8a <inverse+0xe>
 a9c:	91 50       	subi	r25, 0x01	; 1
 a9e:	50 40       	sbci	r21, 0x00	; 0
 aa0:	94 f0       	brlt	.+36     	; 0xac6 <ldexp+0x38>
 aa2:	59 f0       	breq	.+22     	; 0xaba <ldexp+0x2c>
 aa4:	88 23       	and	r24, r24
 aa6:	32 f0       	brmi	.+12     	; 0xab4 <ldexp+0x26>
 aa8:	66 0f       	add	r22, r22
 aaa:	77 1f       	adc	r23, r23
 aac:	88 1f       	adc	r24, r24
 aae:	91 50       	subi	r25, 0x01	; 1
 ab0:	50 40       	sbci	r21, 0x00	; 0
 ab2:	c1 f7       	brne	.-16     	; 0xaa4 <ldexp+0x16>
 ab4:	9e 3f       	cpi	r25, 0xFE	; 254
 ab6:	51 05       	cpc	r21, r1
 ab8:	44 f7       	brge	.-48     	; 0xa8a <inverse+0xe>
 aba:	88 0f       	add	r24, r24
 abc:	91 1d       	adc	r25, r1
 abe:	96 95       	lsr	r25
 ac0:	87 95       	ror	r24
 ac2:	97 f9       	bld	r25, 7
 ac4:	08 95       	ret
 ac6:	5f 3f       	cpi	r21, 0xFF	; 255
 ac8:	ac f0       	brlt	.+42     	; 0xaf4 <ldexp+0x66>
 aca:	98 3e       	cpi	r25, 0xE8	; 232
 acc:	9c f0       	brlt	.+38     	; 0xaf4 <ldexp+0x66>
 ace:	bb 27       	eor	r27, r27
 ad0:	86 95       	lsr	r24
 ad2:	77 95       	ror	r23
 ad4:	67 95       	ror	r22
 ad6:	b7 95       	ror	r27
 ad8:	08 f4       	brcc	.+2      	; 0xadc <ldexp+0x4e>
 ada:	b1 60       	ori	r27, 0x01	; 1
 adc:	93 95       	inc	r25
 ade:	c1 f7       	brne	.-16     	; 0xad0 <ldexp+0x42>
 ae0:	bb 0f       	add	r27, r27
 ae2:	58 f7       	brcc	.-42     	; 0xaba <ldexp+0x2c>
 ae4:	11 f4       	brne	.+4      	; 0xaea <ldexp+0x5c>
 ae6:	60 ff       	sbrs	r22, 0
 ae8:	e8 cf       	rjmp	.-48     	; 0xaba <ldexp+0x2c>
 aea:	6f 5f       	subi	r22, 0xFF	; 255
 aec:	7f 4f       	sbci	r23, 0xFF	; 255
 aee:	8f 4f       	sbci	r24, 0xFF	; 255
 af0:	9f 4f       	sbci	r25, 0xFF	; 255
 af2:	e3 cf       	rjmp	.-58     	; 0xaba <ldexp+0x2c>
 af4:	5f ce       	rjmp	.-834    	; 0x7b4 <__fp_szero>

00000af6 <modf>:
 af6:	fa 01       	movw	r30, r20
 af8:	dc 01       	movw	r26, r24
 afa:	aa 0f       	add	r26, r26
 afc:	bb 1f       	adc	r27, r27
 afe:	9b 01       	movw	r18, r22
 b00:	ac 01       	movw	r20, r24
 b02:	bf 57       	subi	r27, 0x7F	; 127
 b04:	28 f4       	brcc	.+10     	; 0xb10 <modf+0x1a>
 b06:	22 27       	eor	r18, r18
 b08:	33 27       	eor	r19, r19
 b0a:	44 27       	eor	r20, r20
 b0c:	50 78       	andi	r21, 0x80	; 128
 b0e:	1f c0       	rjmp	.+62     	; 0xb4e <modf+0x58>
 b10:	b7 51       	subi	r27, 0x17	; 23
 b12:	88 f4       	brcc	.+34     	; 0xb36 <modf+0x40>
 b14:	ab 2f       	mov	r26, r27
 b16:	00 24       	eor	r0, r0
 b18:	46 95       	lsr	r20
 b1a:	37 95       	ror	r19
 b1c:	27 95       	ror	r18
 b1e:	01 1c       	adc	r0, r1
 b20:	a3 95       	inc	r26
 b22:	d2 f3       	brmi	.-12     	; 0xb18 <modf+0x22>
 b24:	00 20       	and	r0, r0
 b26:	69 f0       	breq	.+26     	; 0xb42 <modf+0x4c>
 b28:	22 0f       	add	r18, r18
 b2a:	33 1f       	adc	r19, r19
 b2c:	44 1f       	adc	r20, r20
 b2e:	b3 95       	inc	r27
 b30:	da f3       	brmi	.-10     	; 0xb28 <modf+0x32>
 b32:	0d d0       	rcall	.+26     	; 0xb4e <modf+0x58>
 b34:	b9 cc       	rjmp	.-1678   	; 0x4a8 <__subsf3>
 b36:	61 30       	cpi	r22, 0x01	; 1
 b38:	71 05       	cpc	r23, r1
 b3a:	a0 e8       	ldi	r26, 0x80	; 128
 b3c:	8a 07       	cpc	r24, r26
 b3e:	b9 46       	sbci	r27, 0x69	; 105
 b40:	30 f4       	brcc	.+12     	; 0xb4e <modf+0x58>
 b42:	9b 01       	movw	r18, r22
 b44:	ac 01       	movw	r20, r24
 b46:	66 27       	eor	r22, r22
 b48:	77 27       	eor	r23, r23
 b4a:	88 27       	eor	r24, r24
 b4c:	90 78       	andi	r25, 0x80	; 128
 b4e:	30 96       	adiw	r30, 0x00	; 0
 b50:	21 f0       	breq	.+8      	; 0xb5a <modf+0x64>
 b52:	20 83       	st	Z, r18
 b54:	31 83       	std	Z+1, r19	; 0x01
 b56:	42 83       	std	Z+2, r20	; 0x02
 b58:	53 83       	std	Z+3, r21	; 0x03
 b5a:	08 95       	ret

00000b5c <__divmodhi4>:
 b5c:	97 fb       	bst	r25, 7
 b5e:	07 2e       	mov	r0, r23
 b60:	16 f4       	brtc	.+4      	; 0xb66 <__divmodhi4+0xa>
 b62:	00 94       	com	r0
 b64:	06 d0       	rcall	.+12     	; 0xb72 <__divmodhi4_neg1>
 b66:	77 fd       	sbrc	r23, 7
 b68:	08 d0       	rcall	.+16     	; 0xb7a <__divmodhi4_neg2>
 b6a:	0b d0       	rcall	.+22     	; 0xb82 <__udivmodhi4>
 b6c:	07 fc       	sbrc	r0, 7
 b6e:	05 d0       	rcall	.+10     	; 0xb7a <__divmodhi4_neg2>
 b70:	3e f4       	brtc	.+14     	; 0xb80 <__divmodhi4_exit>

00000b72 <__divmodhi4_neg1>:
 b72:	90 95       	com	r25
 b74:	81 95       	neg	r24
 b76:	9f 4f       	sbci	r25, 0xFF	; 255
 b78:	08 95       	ret

00000b7a <__divmodhi4_neg2>:
 b7a:	70 95       	com	r23
 b7c:	61 95       	neg	r22
 b7e:	7f 4f       	sbci	r23, 0xFF	; 255

00000b80 <__divmodhi4_exit>:
 b80:	08 95       	ret

00000b82 <__udivmodhi4>:
 b82:	aa 1b       	sub	r26, r26
 b84:	bb 1b       	sub	r27, r27
 b86:	51 e1       	ldi	r21, 0x11	; 17
 b88:	07 c0       	rjmp	.+14     	; 0xb98 <__udivmodhi4_ep>

00000b8a <__udivmodhi4_loop>:
 b8a:	aa 1f       	adc	r26, r26
 b8c:	bb 1f       	adc	r27, r27
 b8e:	a6 17       	cp	r26, r22
 b90:	b7 07       	cpc	r27, r23
 b92:	10 f0       	brcs	.+4      	; 0xb98 <__udivmodhi4_ep>
 b94:	a6 1b       	sub	r26, r22
 b96:	b7 0b       	sbc	r27, r23

00000b98 <__udivmodhi4_ep>:
 b98:	88 1f       	adc	r24, r24
 b9a:	99 1f       	adc	r25, r25
 b9c:	5a 95       	dec	r21
 b9e:	a9 f7       	brne	.-22     	; 0xb8a <__udivmodhi4_loop>
 ba0:	80 95       	com	r24
 ba2:	90 95       	com	r25
 ba4:	bc 01       	movw	r22, r24
 ba6:	cd 01       	movw	r24, r26
 ba8:	08 95       	ret

00000baa <_exit>:
 baa:	f8 94       	cli

00000bac <__stop_program>:
 bac:	ff cf       	rjmp	.-2      	; 0xbac <__stop_program>
